(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[929],{6145:(e,t,s)=>{"use strict";s.r(t),s.d(t,{default:()=>n});var r=s(5155),a=s(2115);class i{reset(){this.stats={totalFiles:0,processedFiles:0,failedFiles:0,cancelledFiles:0,totalBytes:0,processedBytes:0,startTime:null,endTime:null,averageFileSize:0,estimatedTimeRemaining:null,currentThroughput:0},this.tasks.clear(),this.emitEvent("reset",this.getProgress())}startTracking(e,t){this.stats.totalFiles=e,this.stats.totalBytes=t,this.stats.startTime=Date.now(),this.stats.averageFileSize=e>0?t/e:0,this.emitEvent("trackingStarted",this.getProgress())}updateFileProgress(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:100,s=Math.floor(e*t/100);this.stats.processedBytes=Math.min(this.stats.processedBytes+s,this.stats.totalBytes),this.updateEstimates(),this.emitEvent("progressUpdated",this.getProgress())}completeFile(){this.stats.processedFiles++,this.updateEstimates(),this.emitEvent("fileCompleted",this.getProgress())}failFile(){this.stats.failedFiles++,this.stats.processedFiles++,this.updateEstimates(),this.emitEvent("fileFailed",this.getProgress())}cancelFile(){this.stats.cancelledFiles++,this.updateEstimates(),this.emitEvent("fileCancelled",this.getProgress())}updateEstimates(){let e=Date.now()-this.stats.startTime;if(e>0&&this.stats.processedBytes>0){this.stats.currentThroughput=this.stats.processedBytes/e;let t=this.stats.totalBytes-this.stats.processedBytes;this.stats.currentThroughput>0&&(this.stats.estimatedTimeRemaining=t/this.stats.currentThroughput)}}finish(){this.stats.endTime=Date.now(),this.emitEvent("trackingFinished",this.getProgress())}createTask(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!e||"string"!=typeof e)throw Error("Task ID must be a non-empty string");if(this.tasks.has(e))throw Error("Task ".concat(e," already exists"));("object"!=typeof t||null===t)&&(t={});let s={id:e,status:"created",progress:0,message:"Task created",metadata:{fileName:t.fileName||"Unknown file",fileSize:t.fileSize||0,type:t.type||"single",fileCount:t.fileCount||1,totalSize:t.totalSize||t.fileSize||0,...t},createdAt:Date.now(),startedAt:null,completedAt:null,lastUpdated:Date.now(),history:[]};return this.tasks.set(e,s),this.emitEvent("taskCreated",{taskId:e,task:s}),s}updateProgress(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(!e||"string"!=typeof e)throw Error("Task ID must be a non-empty string");let a=this.tasks.get(e);if(!a)throw Error("Task ".concat(e," not found"));if("number"!=typeof t||isNaN(t))throw Error("Progress must be a number");if(t<0||t>100)throw Error("Progress must be between 0 and 100");if("completed"===a.status)return console.warn("Attempting to update progress for completed task ".concat(e)),a;if(["failed","cancelled"].includes(a.status))throw Error("Cannot update progress for ".concat(a.status," task ").concat(e));"string"!=typeof s&&(s=String(s||"")),("object"!=typeof r||null===r)&&(r={}),"created"===a.status&&t>0&&(a.status="in_progress",a.startedAt=Date.now());let i=a.progress;return a.progress=t,a.message=s,a.lastUpdated=Date.now(),a.history.push({timestamp:Date.now(),progress:t,message:s,...r}),a.history.length>50&&a.history.shift(),this.emitEvent("taskProgressUpdated",{taskId:e,task:a,previousProgress:i,progressDelta:t-i}),a}completeTask(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(!e||"string"!=typeof e)throw Error("Task ID must be a non-empty string");let s=this.tasks.get(e);if(!s)throw Error("Task ".concat(e," not found"));return"completed"===s.status||(s.status="completed",s.progress=100,s.message="Task completed successfully",s.completedAt=Date.now(),s.lastUpdated=Date.now(),s.result=t,s.history.push({timestamp:Date.now(),progress:100,message:"Task completed",status:"completed"}),this.emitEvent("taskCompleted",{taskId:e,task:s,result:t})),s}cancelTask(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Task cancelled by user";if(!e||"string"!=typeof e)throw Error("Task ID must be a non-empty string");let s=this.tasks.get(e);if(!s)throw Error("Task ".concat(e," not found"));return"string"!=typeof t&&(t=String(t||"Task cancelled by user")),["completed","failed","cancelled"].includes(s.status)||(s.status="cancelled",s.message=t,s.completedAt=Date.now(),s.lastUpdated=Date.now(),s.cancelReason=t,s.history.push({timestamp:Date.now(),progress:s.progress,message:t,status:"cancelled"}),this.emitEvent("taskCancelled",{taskId:e,task:s,reason:t})),s}failTask(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!e||"string"!=typeof e)throw Error("Task ID must be a non-empty string");let r=this.tasks.get(e);if(!r)throw Error("Task ".concat(e," not found"));return t?"string"!=typeof t&&(t=String(t)):t="Unknown error",("object"!=typeof s||null===s)&&(s={}),["completed","cancelled"].includes(r.status)||(r.status="failed",r.message="Task failed: ".concat(t),r.completedAt=Date.now(),r.lastUpdated=Date.now(),r.error=t,r.errorDetails=s,r.history.push({timestamp:Date.now(),progress:r.progress,message:"Failed: ".concat(t),status:"failed",error:t,...s}),this.emitEvent("taskFailed",{taskId:e,task:r,error:t,details:s})),r}getProgress(){let e=this.stats.totalFiles>0?this.stats.processedFiles/this.stats.totalFiles*100:0,t=this.stats.totalBytes>0?this.stats.processedBytes/this.stats.totalBytes*100:0,s=this.stats.startTime?(this.stats.endTime||Date.now())-this.stats.startTime:0;return{...this.stats,fileProgressPercent:Math.round(100*e)/100,byteProgressPercent:Math.round(100*t)/100,elapsedTime:s,isComplete:this.stats.processedFiles>=this.stats.totalFiles,throughputBytesPerSecond:1e3*this.stats.currentThroughput}}on(e,t){this.listeners.has(e)||this.listeners.set(e,[]),this.listeners.get(e).push(t)}off(e,t){if(!this.listeners.has(e))return;let s=this.listeners.get(e),r=s.indexOf(t);-1!==r&&s.splice(r,1)}emitEvent(e,t){this.listeners.has(e)&&this.listeners.get(e).forEach(s=>{try{s(t)}catch(t){console.error("Error in progress tracker listener for ".concat(e,":"),t)}})}getTask(e){return this.tasks.get(e)||null}getTaskProgress(e){let t=this.tasks.get(e);if(!t)return null;let s=t.startedAt?Date.now()-t.startedAt:0,r=t.completedAt?t.completedAt-t.startedAt:s;return{taskId:e,progress:t.progress,status:t.status,message:t.message,metadata:t.metadata,elapsedTime:s,totalTime:r,createdAt:t.createdAt,startedAt:t.startedAt,completedAt:t.completedAt,lastUpdated:t.lastUpdated,isComplete:"completed"===t.status,isFailed:"failed"===t.status,isCancelled:"cancelled"===t.status,isActive:"in_progress"===t.status}}getAllTasks(){return Array.from(this.tasks.values()).map(e=>({taskId:e.id,progress:e.progress,status:e.status,message:e.message,metadata:e.metadata,createdAt:e.createdAt,startedAt:e.startedAt,completedAt:e.completedAt,lastUpdated:e.lastUpdated}))}getActiveTasks(){return this.getAllTasks().filter(e=>"in_progress"===e.status)}getCompletedTasks(){return this.getAllTasks().filter(e=>"completed"===e.status)}getFailedTasks(){return this.getAllTasks().filter(e=>"failed"===e.status)}getCancelledTasks(){return this.getAllTasks().filter(e=>"cancelled"===e.status)}getOverallProgress(){let e=Array.from(this.tasks.values());if(0===e.length)return{totalTasks:0,completedTasks:0,activeTasks:0,failedTasks:0,cancelledTasks:0,overallProgress:0,averageProgress:0};let t=e.filter(e=>"completed"===e.status).length,s=e.filter(e=>"in_progress"===e.status).length,r=e.filter(e=>"failed"===e.status).length,a=e.filter(e=>"cancelled"===e.status).length,i=e.reduce((e,t)=>e+t.progress,0)/e.length,o=t/e.length*100;return{totalTasks:e.length,completedTasks:t,activeTasks:s,failedTasks:r,cancelledTasks:a,overallProgress:Math.round(100*o)/100,averageProgress:Math.round(100*i)/100,...this.getProgress()}}removeTask(e){if(!e||"string"!=typeof e)throw Error("Task ID must be a non-empty string");let t=this.tasks.get(e);return!!t&&(this.tasks.delete(e),this.emitEvent("taskRemoved",{taskId:e,task:t}),!0)}taskExists(e){return this.tasks.has(e)}getTaskCount(){return this.tasks.size}isTaskActive(e){let t=this.tasks.get(e);return!!t&&"in_progress"===t.status}isTaskCompleted(e){let t=this.tasks.get(e);return!!t&&"completed"===t.status}getActiveTaskCount(){return this.getActiveTasks().length}cancelAllTasks(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"All tasks cancelled",t=[];for(let[s,r]of this.tasks.entries())("in_progress"===r.status||"created"===r.status)&&(this.cancelTask(s,e),t.push(s));return t}pauseTask(e){if(!e||"string"!=typeof e)throw Error("Task ID must be a non-empty string");let t=this.tasks.get(e);if(!t)throw Error("Task ".concat(e," not found"));return"in_progress"===t.status&&(t.status="paused",t.pausedAt=Date.now(),t.message="Task paused",t.history.push({timestamp:Date.now(),progress:t.progress,message:"Task paused",status:"paused"}),this.emitEvent("taskPaused",{taskId:e,task:t})),t}resumeTask(e){if(!e||"string"!=typeof e)throw Error("Task ID must be a non-empty string");let t=this.tasks.get(e);if(!t)throw Error("Task ".concat(e," not found"));return"paused"===t.status&&(t.status="in_progress",t.resumedAt=Date.now(),t.message="Task resumed",t.totalPausedTime||(t.totalPausedTime=0),t.pausedAt&&(t.totalPausedTime+=Date.now()-t.pausedAt),t.history.push({timestamp:Date.now(),progress:t.progress,message:"Task resumed",status:"in_progress"}),this.emitEvent("taskResumed",{taskId:e,task:t})),t}clearCompletedTasks(){let e=[];for(let[t,s]of this.tasks.entries())["completed","failed","cancelled"].includes(s.status)&&(e.push({taskId:t,task:s}),this.tasks.delete(t));return e.length>0&&this.emitEvent("tasksCleared",{clearedTasks:e}),e.length}getTaskHistory(e){let t=this.tasks.get(e);return t?t.history:[]}getTaskStats(){let e=Array.from(this.tasks.values()),t=0,s=0;e.forEach(e=>{e.completedAt&&e.startedAt&&(t+=e.completedAt-e.startedAt,s++)});let r=s>0?t/s:0;return{totalTasks:e.length,averageProcessingTime:r,oldestTask:e.length>0?Math.min(...e.map(e=>e.createdAt)):null,newestTask:e.length>0?Math.max(...e.map(e=>e.createdAt)):null,tasksPerStatus:{created:e.filter(e=>"created"===e.status).length,in_progress:e.filter(e=>"in_progress"===e.status).length,completed:e.filter(e=>"completed"===e.status).length,failed:e.filter(e=>"failed"===e.status).length,cancelled:e.filter(e=>"cancelled"===e.status).length}}}constructor(){this.listeners=new Map,this.tasks=new Map,this.reset()}}class o{initializeWorkerPools(){try{let e=Math.min(2,this.maxWorkers);for(let t=0;t<e;t++){try{this.createWorker("single")}catch(e){console.warn("Failed to create single worker ".concat(t,":"),e.message),this.failedWorkerCreations++}try{this.createWorker("batch")}catch(e){console.warn("Failed to create batch worker ".concat(t,":"),e.message),this.failedWorkerCreations++}}this.failedWorkerCreations>=this.maxWorkerFailures&&(console.error("Too many worker creation failures. Queue may not function properly."),this.emit("workerError",{message:"Worker pool initialization failed",failures:this.failedWorkerCreations}))}catch(e){console.error("Failed to initialize worker pools:",e),this.emit("workerError",{message:"Worker pool initialization error",error:e.message})}}createWorker(e){let t;if(this.isDestroyed)throw Error("Cannot create worker: queue has been destroyed");if(!e||"single"!==e&&"batch"!==e)throw Error('Worker type must be "single" or "batch"');let s="batch"===e?"/workers/batch-converter.worker.js":"/workers/heic-converter.worker.js";try{t=new Worker(s,{type:"module"})}catch(s){if(console.error("Failed to create ".concat(e," worker:"),s),this.failedWorkerCreations++,this.failedWorkerCreations>=this.maxWorkerFailures)t=this.createMockWorker(e);else throw Error("Failed to create ".concat(e," worker: ").concat(s.message))}return t.metadata={type:e,busy:!1,taskId:null,created:Date.now(),isMock:t.isMock||!1,tasksProcessed:0,lastActivity:Date.now()},t.onmessage=e=>this.handleWorkerMessage(t,e),t.onerror=e=>this.handleWorkerError(t,e),("batch"===e?this.batchWorkerPool:this.workerPool).push(t),t}createMockWorker(e){let t={isMock:!0,type:e,postMessage:s=>{console.warn("Mock ".concat(e," worker received message:"),s),setTimeout(()=>{("convert"===s.type||"convert-batch"===s.type)&&this.handleWorkerMessage(t,{data:{type:"error",error:"Mock worker - real workers unavailable"}})},100)},terminate:()=>{console.warn("Mock ".concat(e," worker terminated"))},onmessage:null,onerror:null};return t}getAvailableWorker(e){let t="batch"===e?this.batchWorkerPool:this.workerPool,s=t.find(e=>!e.metadata.busy);return!s&&t.length<this.maxWorkers&&(s=this.createWorker(e)),s}async addFile(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(this.isDestroyed)throw Error("Cannot add file: queue has been destroyed");if(!e||"object"!=typeof e)throw Error("File must be a valid File object");if(!e.name||"string"!=typeof e.name)throw Error("File must have a valid name");if("number"!=typeof e.size||e.size<0)throw Error("File must have a valid size");if(t&&"object"!=typeof t)throw Error("Options must be an object");let s=this.generateTaskId(),r=t.targetType||"jpeg",a=Math.min(100,Math.max(1,t.quality||90)),i=["jpeg","jpg","png","webp"];if(!i.includes(r.toLowerCase()))throw Error("Invalid target type: ".concat(r,". Must be one of: ").concat(i.join(", ")));let o={id:s,type:"single",file:e,options:{targetType:r.toLowerCase(),quality:a,...t},retries:0,status:"queued",addedAt:Date.now(),priority:t.priority||0};try{return this.progressTracker.createTask(s,{fileName:e.name,fileSize:e.size,type:"single",targetType:o.options.targetType,quality:o.options.quality}),this.queue.push(o),this.queue.sort((e,t)=>(t.priority||0)-(e.priority||0)),this.processQueue(),s}catch(e){throw console.error("Failed to add file to queue:",e),Error("Failed to add file to queue: ".concat(e.message))}}async addBatch(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(this.isDestroyed)throw Error("Cannot add batch: queue has been destroyed");if(!Array.isArray(e))throw Error("Files must be an array");if(0===e.length)throw Error("Files array cannot be empty");if(e.length>100)throw Error("Batch size cannot exceed 100 files");if(e.forEach((e,t)=>{if(!e||"object"!=typeof e)throw Error("File at index ".concat(t," must be a valid File object"));if(!e.name||"string"!=typeof e.name)throw Error("File at index ".concat(t," must have a valid name"));if("number"!=typeof e.size||e.size<0)throw Error("File at index ".concat(t," must have a valid size"))}),t&&"object"!=typeof t)throw Error("Options must be an object");let s=this.generateTaskId(),r=t.targetType||"jpeg",a=Math.min(100,Math.max(1,t.quality||90)),i=["jpeg","jpg","png","webp"];if(!i.includes(r.toLowerCase()))throw Error("Invalid target type: ".concat(r,". Must be one of: ").concat(i.join(", ")));let o=e.reduce((e,t)=>e+t.size,0),l={id:s,type:"batch",files:e,options:{targetType:r.toLowerCase(),quality:a,...t},retries:0,status:"queued",addedAt:Date.now(),priority:t.priority||0};try{return this.progressTracker.createTask(s,{fileCount:e.length,totalSize:o,type:"batch",targetType:l.options.targetType,quality:l.options.quality,files:e.map(e=>({name:e.name,size:e.size}))}),this.queue.push(l),this.queue.sort((e,t)=>(t.priority||0)-(e.priority||0)),this.processQueue(),s}catch(e){throw console.error("Failed to add batch to queue:",e),Error("Failed to add batch to queue: ".concat(e.message))}}async processQueue(){if(!this.isPaused&&!this.isDestroyed)for(;this.queue.length>0&&this.activeWorkers.size<this.maxConcurrent&&!this.isPaused&&!this.isDestroyed;){let e=this.queue.shift();if(!e)break;let t=this.getAvailableWorker(e.type);if(!t){this.queue.unshift(e);break}try{await this.executeTask(e,t)}catch(t){console.error("Error executing task:",t),this.handleTaskError(e,t)}}}pause(){if(this.isDestroyed)throw Error("Cannot pause: queue has been destroyed");this.isPaused||(this.isPaused=!0,this.emit("queuePaused",{timestamp:Date.now(),queuedTasks:this.queue.length,activeTasks:this.activeWorkers.size}))}resume(){if(this.isDestroyed)throw Error("Cannot resume: queue has been destroyed");this.isPaused&&(this.isPaused=!1,this.emit("queueResumed",{timestamp:Date.now(),queuedTasks:this.queue.length,activeTasks:this.activeWorkers.size}),this.processQueue())}isPausedState(){return this.isPaused}getQueuePriorities(){let e=this.queue.map(e=>e.priority||0);return{min:Math.min(...e)||0,max:Math.max(...e)||0,average:e.length>0?e.reduce((e,t)=>e+t,0)/e.length:0}}async executeTask(e,t){t.metadata.busy=!0,t.metadata.taskId=e.id,this.activeWorkers.set(e.id,{task:e,worker:t}),e.status="processing",this.progressTracker.updateProgress(e.id,0,"Starting conversion");try{"batch"===e.type?t.postMessage({type:"convert-batch",files:e.files,targetType:e.options.targetType,quality:e.options.quality}):t.postMessage({type:"convert",file:e.file,targetType:e.options.targetType,quality:e.options.quality})}catch(t){this.handleTaskError(e,t)}}handleWorkerMessage(e,t){let{type:s}=t.data,r=this.activeWorkers.get(e.metadata.taskId);if(r)switch(s){case"progress":this.handleProgress(r.task,t.data);break;case"batch-progress":this.handleBatchProgress(r.task,t.data);break;case"success":this.handleSuccess(r.task,t.data);break;case"batch-complete":this.handleBatchComplete(r.task,t.data);break;case"cancelled":case"batch-cancelled":this.handleCancellation(r.task,t.data);break;case"error":case"batch-error":this.handleTaskError(r.task,Error(t.data.error))}}handleProgress(e,t){var s;let{progress:r,stage:a,message:i}=t;this.progressTracker.updateProgress(e.id,r,i,{stage:a,timestamp:Date.now()}),this.emit("progress",{taskId:e.id,progress:r,stage:a,message:i,fileName:null==(s=e.file)?void 0:s.name})}handleBatchProgress(e,t){let{progress:s,currentFile:r,message:a,details:i}=t;this.progressTracker.updateProgress(e.id,s,a,{currentFile:r,...i}),this.emit("progress",{taskId:e.id,progress:s,currentFile:r,message:a,details:i})}handleSuccess(e,t){var s,r;let{result:a,metadata:i}=t,o=Date.now()-e.addedAt;this.metrics.totalTasksProcessed++,this.updateAverageProcessingTime(o);let l=this.activeWorkers.get(e.id);(null==l||null==(s=l.worker)?void 0:s.metadata)&&(l.worker.metadata.tasksProcessed++,l.worker.metadata.lastActivity=Date.now()),this.progressTracker.completeTask(e.id,{result:a,metadata:i,processingTime:o,completedAt:Date.now()}),this.releaseWorker(e.id),this.emit("complete",{taskId:e.id,result:a,metadata:i,fileName:null==(r=e.file)?void 0:r.name,processingTime:o,type:e.type}),this.processQueue()}handleBatchComplete(e,t){var s,r;let{results:a,errors:i,summary:o}=t,l=Date.now()-e.addedAt;this.metrics.totalTasksProcessed++,this.updateAverageProcessingTime(l);let n=this.activeWorkers.get(e.id);(null==n||null==(s=n.worker)?void 0:s.metadata)&&(n.worker.metadata.tasksProcessed++,n.worker.metadata.lastActivity=Date.now()),this.progressTracker.completeTask(e.id,{results:a,errors:i,summary:o,processingTime:l,completedAt:Date.now(),successCount:(null==a?void 0:a.length)||0,errorCount:(null==i?void 0:i.length)||0}),this.releaseWorker(e.id),this.emit("complete",{taskId:e.id,results:a,errors:i,summary:o,type:"batch",processingTime:l,fileCount:(null==(r=e.files)?void 0:r.length)||0}),this.processQueue()}handleCancellation(e,t){var s;this.metrics.totalTasksCancelled++,this.progressTracker.cancelTask(e.id,t.message||"Task cancelled"),this.releaseWorker(e.id),this.emit("cancelled",{taskId:e.id,message:t.message,fileName:null==(s=e.file)?void 0:s.name,type:e.type,cancelledAt:Date.now()}),this.processQueue()}handleTaskError(e,t){if(e.retries++,e.retries<this.maxRetries)setTimeout(()=>{this.isDestroyed||(e.status="queued",this.queue.unshift(e),this.processQueue())},this.retryDelay*e.retries),this.progressTracker.updateProgress(e.id,0,"Retrying... (Attempt ".concat(e.retries+1,"/").concat(this.maxRetries,")"));else{var s;this.metrics.totalTasksFailed++,this.progressTracker.failTask(e.id,t.message,{retries:e.retries,lastError:t.message,failedAt:Date.now()}),this.releaseWorker(e.id),this.emit("error",{taskId:e.id,error:t.message,fileName:null==(s=e.file)?void 0:s.name,retries:e.retries,type:e.type}),this.processQueue()}}updateAverageProcessingTime(e){let t=this.metrics.totalTasksProcessed;1===t?this.metrics.averageProcessingTime=e:this.metrics.averageProcessingTime=(this.metrics.averageProcessingTime*(t-1)+e)/t}calculateWorkerUtilization(){let e=this.workerPool.length+this.batchWorkerPool.length,t=[...this.workerPool,...this.batchWorkerPool].filter(e=>e.metadata.busy).length;return e>0?t/e*100:0}getMetrics(){let e=Date.now()-this.metrics.startTime;return{...this.metrics,uptime:e,workerUtilization:this.calculateWorkerUtilization(),tasksPerSecond:e>0?this.metrics.totalTasksProcessed/(e/1e3):0,successRate:this.metrics.totalTasksProcessed>0?(this.metrics.totalTasksProcessed-this.metrics.totalTasksFailed)/this.metrics.totalTasksProcessed*100:0,queueLength:this.queue.length,activeTasks:this.activeWorkers.size,isPaused:this.isPaused,isDestroyed:this.isDestroyed}}handleWorkerError(e,t){var s,r;if(console.log("DEBUG - Error type:",typeof t,"Value:",t,"Constructor:",null==t||null==(s=t.constructor)?void 0:s.name),t instanceof Event)return void console.error("Worker error: Event triggered",t.type);"number"==typeof t||"[object Number]"===Object.prototype.toString.call(t)?console.error("Worker error code: ".concat(t)):"string"==typeof t?console.error("Worker error message: ".concat(t)):t instanceof Error?console.error("Worker error: ".concat(t.message,"\n").concat(t.stack)):console.error("Worker error (unknown type): "+((null==t||null==(r=t.constructor)?void 0:r.name)||typeof t),t);let a=e.metadata.taskId;if(a&&this.activeWorkers.has(a)){let{task:e}=this.activeWorkers.get(a);this.handleTaskError(e,Error("Worker crashed"))}this.replaceWorker(e)}releaseWorker(e){let t=this.activeWorkers.get(e);t&&(t.worker.metadata.busy=!1,t.worker.metadata.taskId=null,this.activeWorkers.delete(e))}replaceWorker(e){let t=e.metadata.type,s="batch"===t?this.batchWorkerPool:this.workerPool,r=s.indexOf(e);-1!==r&&(e.terminate(),s.splice(r,1),this.createWorker(t))}cancelTask(e){let t=this.queue.findIndex(t=>t.id===e);if(-1!==t){var s;let r=this.queue.splice(t,1)[0];return this.progressTracker.cancelTask(e),this.emit("cancelled",{taskId:e,message:"Task cancelled",fileName:null==(s=r.file)?void 0:s.name}),!0}let r=this.activeWorkers.get(e);if(r){let{worker:e,task:t}=r,s="batch"===t.type?"cancel-batch":"cancel";return e.postMessage({type:s}),!0}return!1}cancelAll(){for(;this.queue.length>0;){var e;let t=this.queue.shift();this.progressTracker.cancelTask(t.id),this.emit("cancelled",{taskId:t.id,message:"All tasks cancelled",fileName:null==(e=t.file)?void 0:e.name})}for(let[,{worker:e,task:t}]of this.activeWorkers){let s="batch"===t.type?"cancel-batch":"cancel";e.postMessage({type:s})}}getProgress(e){return this.progressTracker.getTaskProgress(e)}getQueueStatus(){let e=this.progressTracker.getOverallProgress(),t=this.getWorkerStats();return{queued:this.queue.length,active:this.activeWorkers.size,progress:e,workers:t,isPaused:this.isPaused,isDestroyed:this.isDestroyed,priorities:this.getQueuePriorities(),metrics:{processed:this.metrics.totalTasksProcessed,failed:this.metrics.totalTasksFailed,cancelled:this.metrics.totalTasksCancelled,averageTime:Math.round(this.metrics.averageProcessingTime),utilization:Math.round(100*this.calculateWorkerUtilization())/100},uptime:Date.now()-this.metrics.startTime}}getWorkerStats(){let e=this.workerPool,t=this.batchWorkerPool;return{single:{total:e.length,available:e.filter(e=>!e.metadata.busy).length,busy:e.filter(e=>e.metadata.busy).length,mock:e.filter(e=>e.metadata.isMock).length},batch:{total:t.length,available:t.filter(e=>!e.metadata.busy).length,busy:t.filter(e=>e.metadata.busy).length,mock:t.filter(e=>e.metadata.isMock).length},totalTasks:[...e,...t].reduce((e,t)=>e+(t.metadata.tasksProcessed||0),0)}}on(e,t){this.eventHandlers[e]&&this.eventHandlers[e].push(t)}off(e,t){if(this.eventHandlers[e]){let s=this.eventHandlers[e].indexOf(t);-1!==s&&this.eventHandlers[e].splice(s,1)}}emit(e,t){this.eventHandlers[e]&&this.eventHandlers[e].forEach(e=>e(t))}generateTaskId(){return"task_".concat(Date.now(),"_").concat(Math.random().toString(36).substr(2,9))}destroy(){this.isDestroyed||(this.isDestroyed=!0,this.isPaused=!1,this.cancelAll(),setTimeout(()=>{[...this.workerPool,...this.batchWorkerPool].forEach(e=>{e.terminate&&e.terminate()}),this.workerPool=[],this.batchWorkerPool=[],this.activeWorkers.clear(),this.queue=[],Object.keys(this.eventHandlers).forEach(e=>{this.eventHandlers[e]=[]}),this.progressTracker&&this.progressTracker.reset(),console.log("ConversionQueue destroyed")},100))}isDestroyedState(){return this.isDestroyed}getHealthStatus(){let e=this.getQueueStatus(),t=this.getMetrics();return{healthy:!this.isDestroyed&&this.failedWorkerCreations<this.maxWorkerFailures,issues:[],recommendations:[],status:{queue:this.isDestroyed?"destroyed":this.isPaused?"paused":"active",workers:e.workers.single.total+e.workers.batch.total,utilization:t.workerUtilization,successRate:t.successRate}}}constructor(e={}){if(e&&"object"!=typeof e)throw Error("Options must be an object");this.maxConcurrent=Math.max(1,e.maxConcurrent||2),this.maxRetries=Math.max(0,e.maxRetries||3),this.retryDelay=Math.max(100,e.retryDelay||1e3),this.maxWorkers=Math.max(1,e.maxWorkers||4),this.queue=[],this.activeWorkers=new Map,this.progressTracker=new i,this.isPaused=!1,this.isDestroyed=!1,this.workerPool=[],this.batchWorkerPool=[],this.failedWorkerCreations=0,this.maxWorkerFailures=3,this.eventHandlers={progress:[],complete:[],error:[],cancelled:[],workerError:[],queuePaused:[],queueResumed:[]},this.metrics={totalTasksProcessed:0,totalTasksFailed:0,totalTasksCancelled:0,averageProcessingTime:0,workerUtilization:0,startTime:Date.now()},this.initializeWorkerPools()}}function l(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;if(0===e)return"0 B";let s=Math.floor(Math.log(e)/Math.log(1024));return parseFloat((e/Math.pow(1024,s)).toFixed(t<0?0:t))+" "+["B","KB","MB","GB","TB"][s]}function n(){let[e,t]=(0,a.useState)([]),[s]=(0,a.useState)(()=>new i),[n]=(0,a.useState)(()=>new o),[c,d]=(0,a.useState)(null),[h,u]=(0,a.useState)({queued:0,active:0,progress:{fileProgressPercent:0,byteProgressPercent:0,processedFiles:0,totalFiles:0,processedBytes:0,totalBytes:0,throughputBytesPerSecond:0,estimatedTimeRemaining:null}}),g=e=>{let s=new Date().toLocaleTimeString();t(t=>[...t,"[".concat(s,"] ").concat(e)])},m=(0,a.useCallback)(()=>{let e=n.getQueueStatus(),t=s.getProgress();u({...e,progress:t})},[n,s]);(0,a.useEffect)(()=>{let e=setInterval(m,500);return()=>clearInterval(e)},[m]);let p=async()=>{g("\uD83D\uDE80 Starting basic progress test..."),s.startTracking(3,6291456),d("batch-test");for(let e=0;e<3;e++){for(let t of(g("\uD83D\uDCC2 Processing file ".concat(e+1,"/").concat(3,"...")),[{progress:20,message:"\uD83D\uDD0D Analyzing HEIC..."},{progress:40,message:"\uD83C\uDFA8 Decoding image..."},{progress:70,message:"\uD83D\uDDBC️ Encoding to JPEG..."},{progress:100,message:"✅ File complete!"}])){await new Promise(e=>setTimeout(e,400)),s.updateFileProgress(2097152,t.progress),g("File ".concat(e+1,": ").concat(t.progress,"% - ").concat(t.message));let r=s.getProgress();g("Overall: ".concat(Math.round(r.fileProgressPercent),"% files, ").concat(Math.round(r.byteProgressPercent),"% data"))}s.completeFile(),g("✅ File ".concat(e+1," completed successfully!"))}s.finish(),g("\uD83C\uDF89 All files processed!"),d(null)},k=async()=>{g("\uD83D\uDCCB Testing queue system...");let e=e=>{g("\uD83D\uDCCA Progress [".concat(e.taskId.slice(-6),"]: ").concat(Math.round(e.progress),"% - ").concat(e.message))},t=e=>{g("✅ Task completed [".concat(e.taskId.slice(-6),"]: ").concat(e.fileName||"Unknown file"))},s=e=>{g("❌ Task failed [".concat(e.taskId.slice(-6),"]: ").concat(e.error))},r=e=>{g("\uD83D\uDEAB Task cancelled [".concat(e.taskId.slice(-6),"]: ").concat(e.message))};n.on("progress",e),n.on("complete",t),n.on("error",s),n.on("cancelled",r);let a=[];for(let e=0;e<3;e++){let t=new File([new ArrayBuffer(524288)],"test-".concat(e+1,".heic"),{type:"image/heic"}),s=await n.addFile(t,{targetType:"jpeg",quality:90});a.push(s),g("➕ Added task ".concat(e+1," to queue (ID: ").concat(s.slice(-6),"...)"))}return setTimeout(()=>{n.off("progress",e),n.off("complete",t),n.off("error",s),n.off("cancelled",r),g("\uD83E\uDDF9 Cleaned up queue listeners")},3e4),a},f=async()=>{g("\uD83D\uDED1 Testing cancellation...");let e=new File([new ArrayBuffer(0xa00000)],"large-test-file.heic",{type:"image/heic"}),t=e=>{g("\uD83D\uDEAB Task was cancelled: ".concat(e.message)),d(null)};n.on("cancelled",t);let s=await n.addFile(e,{targetType:"jpeg",quality:90});d(s),g("➕ Added cancellation test file (ID: ".concat(s.slice(-6),"...)")),setTimeout(()=>{n.cancelTask(s)?g("\uD83D\uDED1 Initiated cancellation for task ".concat(s.slice(-6),"...")):(g("❌ Failed to cancel task ".concat(s.slice(-6),"... (may have already completed)")),d(null))},2e3),setTimeout(()=>{n.off("cancelled",t),g("\uD83E\uDDF9 Cleaned up cancellation listener")},1e4)},y=async()=>{g("\uD83D\uDCA5 Testing error handling...");let e=new File([new ArrayBuffer(100)],"invalid-file.heic",{type:"image/heic"}),t=e=>{g("❌ Error caught: ".concat(e.error," (Task: ").concat(e.taskId.slice(-6),"...)"))};n.on("error",t);let s=await n.addFile(e,{targetType:"jpeg",quality:90});g("➕ Added invalid file to test error handling (ID: ".concat(s.slice(-6),"...)")),setTimeout(()=>{n.off("error",t),g("\uD83E\uDDF9 Cleaned up error listener")},15e3)},T=async()=>{g("\uD83D\uDCE6 Testing batch conversion...");let e=[];for(let t=0;t<5;t++)e.push(new File([new ArrayBuffer(204800)],"batch-file-".concat(t+1,".heic"),{type:"image/heic"}));let t=e=>{if("batch"===e.type){var t,s;g("\uD83D\uDCE6 Batch completed: ".concat((null==(t=e.results)?void 0:t.length)||0," files processed, ").concat((null==(s=e.errors)?void 0:s.length)||0," errors"))}};n.on("complete",t);let s=await n.addBatch(e,{targetType:"jpeg",quality:85});g("➕ Added batch of ".concat(e.length," files (ID: ").concat(s.slice(-6),"...)")),setTimeout(()=>{n.off("complete",t),g("\uD83E\uDDF9 Cleaned up batch listener")},3e4)};return(0,r.jsx)("div",{className:"min-h-screen bg-gradient-to-br from-purple-600 to-blue-600 p-8",children:(0,r.jsxs)("div",{className:"max-w-6xl mx-auto",children:[(0,r.jsx)("h1",{className:"text-4xl font-bold text-white mb-8 flex items-center gap-3",children:"\uD83D\uDE80 Progress Tracking Test Suite"}),(0,r.jsxs)("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-6",children:[(0,r.jsxs)("div",{className:"bg-white rounded-lg shadow-xl p-6",children:[(0,r.jsx)("h2",{className:"text-xl font-semibold mb-4",children:"Test Controls"}),(0,r.jsxs)("div",{className:"space-y-3",children:[(0,r.jsx)("button",{onClick:p,className:"w-full bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded",children:"▶️ Test Basic Progress"}),(0,r.jsx)("button",{onClick:k,className:"w-full bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded",children:"\uD83D\uDCCB Test Queue System"}),(0,r.jsx)("button",{onClick:f,className:"w-full bg-orange-500 hover:bg-orange-600 text-white px-4 py-2 rounded",children:"\uD83D\uDED1 Test Cancellation"}),(0,r.jsx)("button",{onClick:y,className:"w-full bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded",children:"\uD83D\uDCA5 Test Error Handling"}),(0,r.jsx)("button",{onClick:T,className:"w-full bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded",children:"\uD83D\uDCE6 Test Batch Conversion"}),(0,r.jsxs)("div",{className:"border-t pt-3 mt-3",children:[(0,r.jsx)("button",{onClick:()=>{g("\uD83D\uDED1 Cancelling all active tasks..."),n.cancelAll(),d(null),g("\uD83E\uDDF9 All tasks cancelled")},className:"w-full bg-yellow-500 hover:bg-yellow-600 text-white px-4 py-2 rounded mb-2",children:"\uD83D\uDED1 Cancel All Tasks"}),(0,r.jsx)("button",{onClick:()=>{g("\uD83D\uDD04 Resetting system..."),n.cancelAll(),s.reset(),d(null),u({queued:0,active:0,progress:{fileProgressPercent:0,byteProgressPercent:0}}),g("✅ System reset complete")},className:"w-full bg-indigo-500 hover:bg-indigo-600 text-white px-4 py-2 rounded mb-2",children:"\uD83D\uDD04 Reset System"}),(0,r.jsx)("button",{onClick:()=>{t([]),g("\uD83E\uDDF9 Logs cleared")},className:"w-full bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded",children:"\uD83E\uDDF9 Clear Logs"})]})]}),c&&(0,r.jsx)("div",{className:"mt-4 p-3 bg-blue-50 rounded",children:(0,r.jsxs)("p",{className:"text-sm",children:["Active Task: ",c]})})]}),(0,r.jsxs)("div",{className:"bg-white rounded-lg shadow-xl p-6",children:[(0,r.jsx)("h2",{className:"text-xl font-semibold mb-4",children:"Test Logs"}),(0,r.jsx)("div",{className:"bg-gray-900 text-green-400 p-4 rounded h-96 overflow-y-auto font-mono text-sm",children:0===e.length?(0,r.jsx)("div",{className:"text-gray-500",children:"Ready to test..."}):e.map((e,t)=>(0,r.jsx)("div",{className:"mb-1",children:e},t))})]})]}),(0,r.jsxs)("div",{className:"mt-6 bg-white rounded-lg shadow-xl p-6",children:[(0,r.jsx)("h2",{className:"text-xl font-semibold mb-4",children:"System Status"}),(0,r.jsxs)("div",{className:"grid grid-cols-2 md:grid-cols-4 gap-4",children:[(0,r.jsxs)("div",{className:"text-center p-3 bg-blue-50 rounded",children:[(0,r.jsx)("div",{className:"text-2xl font-bold text-blue-600",children:h.queued}),(0,r.jsx)("div",{className:"text-sm text-gray-600",children:"Queued"})]}),(0,r.jsxs)("div",{className:"text-center p-3 bg-green-50 rounded",children:[(0,r.jsx)("div",{className:"text-2xl font-bold text-green-600",children:h.active}),(0,r.jsx)("div",{className:"text-sm text-gray-600",children:"Active"})]}),(0,r.jsxs)("div",{className:"text-center p-3 bg-purple-50 rounded",children:[(0,r.jsxs)("div",{className:"text-2xl font-bold text-purple-600",children:[Math.round(h.progress.fileProgressPercent||0),"%"]}),(0,r.jsx)("div",{className:"text-sm text-gray-600",children:"Files Progress"})]}),(0,r.jsxs)("div",{className:"text-center p-3 bg-orange-50 rounded",children:[(0,r.jsxs)("div",{className:"text-2xl font-bold text-orange-600",children:[Math.round(h.progress.byteProgressPercent||0),"%"]}),(0,r.jsx)("div",{className:"text-sm text-gray-600",children:"Data Progress"})]})]}),(0,r.jsxs)("div",{className:"mt-4 grid grid-cols-1 md:grid-cols-3 gap-4 text-sm",children:[(0,r.jsxs)("div",{className:"bg-gray-50 p-3 rounded",children:[(0,r.jsx)("div",{className:"font-medium",children:"Processed Files"}),(0,r.jsxs)("div",{className:"text-gray-600",children:[h.progress.processedFiles||0," / ",h.progress.totalFiles||0]})]}),(0,r.jsxs)("div",{className:"bg-gray-50 p-3 rounded",children:[(0,r.jsx)("div",{className:"font-medium",children:"Data Processed"}),(0,r.jsxs)("div",{className:"text-gray-600",children:[l(h.progress.processedBytes||0)," / ",l(h.progress.totalBytes||0)]})]}),(0,r.jsxs)("div",{className:"bg-gray-50 p-3 rounded",children:[(0,r.jsx)("div",{className:"font-medium",children:"Throughput"}),(0,r.jsxs)("div",{className:"text-gray-600",children:[l(h.progress.throughputBytesPerSecond||0),"/s"]})]})]}),h.progress.estimatedTimeRemaining&&(0,r.jsxs)("div",{className:"mt-3 p-3 bg-yellow-50 rounded",children:[(0,r.jsx)("div",{className:"font-medium text-yellow-800",children:"Estimated Time Remaining"}),(0,r.jsx)("div",{className:"text-yellow-600",children:function(e){if(!e||e<0)return"0s";if(e<1e3)return"less than a second";let t=Math.floor(e/1e3),s=Math.floor(t/60),r=Math.floor(s/60),a=Math.floor(r/24);return a>0?"".concat(a,"d ").concat(r%24,"h"):r>0?"".concat(r,"h ").concat(s%60,"m"):s>0?"".concat(s,"m ").concat(t%60,"s"):"".concat(t,"s")}(h.progress.estimatedTimeRemaining)})]})]})]})})}new o({maxConcurrent:2,maxWorkers:4,maxRetries:3})},6530:(e,t,s)=>{Promise.resolve().then(s.bind(s,6145))}},e=>{e.O(0,[441,964,358],()=>e(e.s=6530)),_N_E=e.O()}]);